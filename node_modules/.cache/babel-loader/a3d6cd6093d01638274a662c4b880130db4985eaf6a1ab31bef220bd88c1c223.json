{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YashankU\\\\Desktop\\\\ibm-final-demos-may-2024\\\\03-ibm-frontend-react\\\\src\\\\components\\\\employee\\\\UpdateEmployee.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateEmployee = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" UpdateEmployee\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = UpdateEmployee;\nexport default UpdateEmployee;\n\n// import React, { useEffect, useState } from 'react'\n// import { useSelector } from 'react-redux'\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// const UpdateEmployee = () => {\n//   const backendUrl = 'http://localhost:8090/emp/update-emp/';\n//   const [selectedEmp,setSelectedEmp]=useState({});\n//   const [errors, setErrors] = useState({});\n//   const navigate=useNavigate();\n// const dataFromStore = useSelector(e=>e.emp.empObj)\n// useEffect(()=>{\n//   setSelectedEmp(dataFromStore)\n// },[dataFromStore])\n// const handleChange = (e)=>{\n//   setSelectedEmp({...selectedEmp,[e.target.name]:e.target.value})\n//   console.log(selectedEmp);\n//   setErrors({ ...errors, [e.target.name]: '' });\n// }\n// const validateForm = () => {\n//   let isValid = true;\n//   const newErrors = {};\n//   if (!selectedEmp.firstName.trim()) {\n//       newErrors.firstName = \"First name is required\";\n//       isValid = false;\n//   }\n//   if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(selectedEmp.email)) {\n//       newErrors.email = \"Invalid email address\";\n//       isValid = false;\n//   }\n//   if (selectedEmp.salary <= 0 || isNaN(selectedEmp.salary)) {\n//       newErrors.salary = \"Salary must be a positive number\";\n//       isValid = false;\n//   }\n//   setErrors(newErrors);\n//   return isValid;\n// };\n// const handleSubmit=(evt)=> {\n//   evt.preventDefault();\n//         if (validateForm()) {\n//             axios.put(backendUrl+selectedEmp.employeeId, selectedEmp)\n//                 .then((resp) => {\n//                     alert(`${resp.data.firstName} updated successfully!`);\n//                     navigate(\"/getAll\")\n//                     // setEmpData({ firstName: '', email: '', salary: '' });\n//                 })\n//                 .catch(error => {\n//                     console.error(\"Error updating employee:\", error);\n//                 });\n//         }\n// }\n//   return (\n//     <>\n//     <h1>Update Employee Component</h1>\n//     <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"firstName\">First Name:</label>\n//         <input type=\"text\" id=\"firstName\" name=\"firstName\" value={selectedEmp.firstName}   placeholder=\"Enter first name\" required autoFocus onChange={handleChange} />\n//         {errors.firstName && <span className=\"error\">{errors.firstName}</span>}\n//         <br />\n//         <label htmlFor=\"email\">Email:</label>\n//         <input type=\"email\" id=\"email\" name=\"email\" value={selectedEmp.email}   placeholder=\"Enter email\" onChange={handleChange}/>\n//         {errors.email && <span className=\"error\">{errors.email}</span>}\n//         <br />\n//         <label htmlFor=\"salary\">Salary:</label>\n//         <input type=\"number\" id=\"salary\" name=\"salary\" value={selectedEmp.salary} placeholder=\"Enter salary\" onChange={handleChange}/>\n//         {errors.salary && <span className=\"error\">{errors.salary}</span>}\n//         <br />\n//         <input type=\"submit\" value=\"Update Employee\"  />\n//     </form>\n//     </>\n//   )\n// }\n// export default UpdateEmployee\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployee\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UpdateEmployee","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/YashankU/Desktop/ibm-final-demos-may-2024/03-ibm-frontend-react/src/components/employee/UpdateEmployee.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst UpdateEmployee = () => {\r\n\r\n    return (\r\n        <div> UpdateEmployee</div>\r\n    )\r\n}\r\n\r\nexport default UpdateEmployee ;\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n// import { useSelector } from 'react-redux'\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// const UpdateEmployee = () => {\r\n//   const backendUrl = 'http://localhost:8090/emp/update-emp/';\r\n//   const [selectedEmp,setSelectedEmp]=useState({});\r\n//   const [errors, setErrors] = useState({});\r\n//   const navigate=useNavigate();\r\n// const dataFromStore = useSelector(e=>e.emp.empObj)\r\n// useEffect(()=>{\r\n//   setSelectedEmp(dataFromStore)\r\n// },[dataFromStore])\r\n// const handleChange = (e)=>{\r\n//   setSelectedEmp({...selectedEmp,[e.target.name]:e.target.value})\r\n//   console.log(selectedEmp);\r\n//   setErrors({ ...errors, [e.target.name]: '' });\r\n// }\r\n// const validateForm = () => {\r\n//   let isValid = true;\r\n//   const newErrors = {};\r\n//   if (!selectedEmp.firstName.trim()) {\r\n//       newErrors.firstName = \"First name is required\";\r\n//       isValid = false;\r\n//   }\r\n//   if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(selectedEmp.email)) {\r\n//       newErrors.email = \"Invalid email address\";\r\n//       isValid = false;\r\n//   }\r\n//   if (selectedEmp.salary <= 0 || isNaN(selectedEmp.salary)) {\r\n//       newErrors.salary = \"Salary must be a positive number\";\r\n//       isValid = false;\r\n//   }\r\n//   setErrors(newErrors);\r\n//   return isValid;\r\n// };\r\n// const handleSubmit=(evt)=> {\r\n//   evt.preventDefault();\r\n//         if (validateForm()) {\r\n//             axios.put(backendUrl+selectedEmp.employeeId, selectedEmp)\r\n//                 .then((resp) => {\r\n//                     alert(`${resp.data.firstName} updated successfully!`);\r\n//                     navigate(\"/getAll\")\r\n//                     // setEmpData({ firstName: '', email: '', salary: '' });\r\n//                 })\r\n//                 .catch(error => {\r\n//                     console.error(\"Error updating employee:\", error);\r\n//                 });\r\n//         }\r\n// }\r\n//   return (\r\n//     <>\r\n//     <h1>Update Employee Component</h1>\r\n//     <form onSubmit={handleSubmit}>\r\n//         <label htmlFor=\"firstName\">First Name:</label>\r\n//         <input type=\"text\" id=\"firstName\" name=\"firstName\" value={selectedEmp.firstName}   placeholder=\"Enter first name\" required autoFocus onChange={handleChange} />\r\n//         {errors.firstName && <span className=\"error\">{errors.firstName}</span>}\r\n//         <br />\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input type=\"email\" id=\"email\" name=\"email\" value={selectedEmp.email}   placeholder=\"Enter email\" onChange={handleChange}/>\r\n//         {errors.email && <span className=\"error\">{errors.email}</span>}\r\n//         <br />\r\n//         <label htmlFor=\"salary\">Salary:</label>\r\n//         <input type=\"number\" id=\"salary\" name=\"salary\" value={selectedEmp.salary} placeholder=\"Enter salary\" onChange={handleChange}/>\r\n//         {errors.salary && <span className=\"error\">{errors.salary}</span>}\r\n//         <br />\r\n//         <input type=\"submit\" value=\"Update Employee\"  />\r\n//     </form>\r\n//     </>\r\n//   )\r\n// }\r\n// export default UpdateEmployee"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAEzB,oBACID,OAAA;IAAAE,QAAA,EAAK;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAElC,CAAC;AAAAC,EAAA,GALKN,cAAc;AAOpB,eAAeA,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}